// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Domain;

namespace Shop.Domain.Migrations
{
    [DbContext(typeof(AeDbContext))]
    partial class AeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop.Domain.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnName("Detail")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("MetaData")
                        .HasColumnName("MetaData")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaDescriptions")
                        .HasColumnName("MetaDescriptions")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnName("MetaKeywords")
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiscountId")
                        .HasColumnName("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentId")
                        .HasColumnName("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnName("Content")
                        .HasColumnType("text");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CouponCode")
                        .HasColumnName("CouponCode")
                        .HasColumnType("varchar(15)");

                    b.Property<double?>("DiscountValue")
                        .HasColumnName("DiscountValue")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .HasColumnName("DisplayName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ExpriredTime")
                        .HasColumnName("ExpriredTime")
                        .HasColumnType("int");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRedeem")
                        .HasColumnName("IsRedeem")
                        .HasColumnType("bit");

                    b.Property<double?>("MaximumDiscount")
                        .HasColumnName("MaximumDiscount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StartedTime")
                        .HasColumnName("StartedTime")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("Address")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .HasColumnName("Content")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnName("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Footer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnName("Content")
                        .HasColumnType("text");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisplayOrder")
                        .HasColumnName("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnName("Link")
                        .HasColumnType("text");

                    b.Property<int?>("MenuTypeID")
                        .HasColumnName("MenuTypeID")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Target")
                        .HasColumnName("Target")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnName("Text")
                        .HasColumnType("text");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuTypeID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Shop.Domain.Entities.MenuType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("MetaDescriptions")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MenuTypes");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress")
                        .HasColumnName("BillingAddress")
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("GrandTotal")
                        .HasColumnName("GrandTotal")
                        .HasColumnType("float");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool?>("IsVerify")
                        .HasColumnName("IsVerify")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .HasColumnName("OrderCode")
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("PackageHeight")
                        .HasColumnName("PackageHeight")
                        .HasColumnType("float");

                    b.Property<double?>("PackageLength")
                        .HasColumnName("PackageLength")
                        .HasColumnType("float");

                    b.Property<double?>("PackageWidth")
                        .HasColumnName("PackageWidth")
                        .HasColumnType("float");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnName("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .HasColumnName("ShippingAddress")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ShippingId")
                        .HasColumnName("ShippingId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("SubTotal")
                        .HasColumnName("SubTotal")
                        .HasColumnType("float");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ShippingId")
                        .IsUnique()
                        .HasFilter("[ShippingId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shop.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnName("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnName("Detail")
                        .HasColumnType("text");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("MetaDescriptions")
                        .HasColumnName("MetaDescriptions")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnName("MetaKeywords")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasColumnName("MetaTitle")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NewImage")
                        .HasColumnName("NewImage")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PostCategoryId")
                        .HasColumnName("PostCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TagId")
                        .HasColumnName("TagId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<int?>("ViewCount")
                        .HasColumnName("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostCategoryId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Shop.Domain.Entities.PostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisplayOrder")
                        .HasColumnName("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("MetaDescriptions")
                        .HasColumnName("MetaDescriptions")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnName("MetaKeywords")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasColumnName("MetaTitle")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ParentId")
                        .HasColumnName("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("SeoTitle")
                        .HasColumnName("SeoTitle")
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("ShowOnHome")
                        .HasColumnName("ShowOnHome")
                        .HasColumnType("bit");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PostCategories");
                });

            modelBuilder.Entity("Shop.Domain.Entities.PostTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnName("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("TagId")
                        .HasColumnName("TagId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnName("Detail")
                        .HasColumnType("text");

                    b.Property<int?>("DiscountId")
                        .HasColumnName("DiscountId")
                        .HasColumnType("int");

                    b.Property<double?>("Height")
                        .HasColumnName("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image1")
                        .HasColumnName("Image1")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image2")
                        .HasColumnName("Image2")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image3")
                        .HasColumnName("Image3")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image4")
                        .HasColumnName("Image4")
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IncludeVAT");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<double?>("Length")
                        .HasColumnName("Length")
                        .HasColumnType("float");

                    b.Property<string>("MetaDescriptions");

                    b.Property<string>("MetaKeywords");

                    b.Property<string>("MetaTitle");

                    b.Property<string>("MoreImages");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImage");

                    b.Property<int?>("ProductStatusId");

                    b.Property<double?>("PromotionPrice")
                        .HasColumnName("PromotionPrice")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("RegularPrice")
                        .HasColumnName("RegularPrice")
                        .HasColumnType("float");

                    b.Property<string>("Sku")
                        .HasColumnName("Sku")
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Status");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<int?>("ViewCounts");

                    b.Property<string>("Warranty");

                    b.Property<double?>("Weight")
                        .HasColumnName("Weight")
                        .HasColumnType("float");

                    b.Property<double?>("Width")
                        .HasColumnName("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId1");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductId1");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Shop.Domain.Entities.ProductStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductStatusTypes");

                    b.HasData(
                        new { Id = 1, InsertedAt = 1543567737, Name = "Out of stock", UpdatedAt = 1543567737 },
                        new { Id = 2, InsertedAt = 1543567737, Name = "Stock", UpdatedAt = 1543567737 }
                    );
                });

            modelBuilder.Entity("Shop.Domain.Entities.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<int?>("ProviderId")
                        .HasColumnName("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingCode")
                        .HasColumnName("ShippingCode")
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("ShippingPrice")
                        .HasColumnName("ShippingPrice")
                        .HasColumnType("float");

                    b.Property<string>("ShippingStatus")
                        .HasColumnName("ShippingStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Shippings");
                });

            modelBuilder.Entity("Shop.Domain.Entities.ShippingProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShippingProviders");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Shop.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("Address")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasColumnName("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("PasswordHash")
                        .HasColumnType("binary(64)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("PasswordSalt")
                        .HasColumnType("binary(128)");

                    b.Property<string>("Phone")
                        .HasColumnName("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<bool?>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Category", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Discount", "Discount")
                        .WithMany("Categories")
                        .HasForeignKey("DiscountId");

                    b.HasOne("Shop.Domain.Entities.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Menu", b =>
                {
                    b.HasOne("Shop.Domain.Entities.MenuType", "MenuType")
                        .WithMany("Menus")
                        .HasForeignKey("MenuTypeID");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("Shop.Domain.Entities.Shipping", "Shipping")
                        .WithOne("Order")
                        .HasForeignKey("Shop.Domain.Entities.Order", "ShippingId");

                    b.HasOne("Shop.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("Shop.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Post", b =>
                {
                    b.HasOne("Shop.Domain.Entities.PostCategory", "PostCategory")
                        .WithMany("Posts")
                        .HasForeignKey("PostCategoryId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.PostTag", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Post", "Post")
                        .WithMany("PostTag")
                        .HasForeignKey("PostId");

                    b.HasOne("Shop.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Product", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Discount", "Discount")
                        .WithMany("Products")
                        .HasForeignKey("DiscountId");

                    b.HasOne("Shop.Domain.Entities.ProductStatusType", "ProductStatusType")
                        .WithMany("Products")
                        .HasForeignKey("ProductStatusId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Shop.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId");

                    b.HasOne("Shop.Domain.Entities.Product")
                        .WithMany("ProductCategory")
                        .HasForeignKey("ProductId1");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Shipping", b =>
                {
                    b.HasOne("Shop.Domain.Entities.ShippingProvider", "Provider")
                        .WithMany("Shippings")
                        .HasForeignKey("ProviderId");
                });
#pragma warning restore 612, 618
        }
    }
}
