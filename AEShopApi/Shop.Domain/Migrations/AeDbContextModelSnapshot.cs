// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Domain;

namespace Shop.Domain.Migrations
{
    [DbContext(typeof(AeDbContext))]
    partial class AeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminImage")
                        .HasColumnName("AdminImage")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnName("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("FullName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Gender")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsActice")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiscountId")
                        .HasColumnName("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentId")
                        .HasColumnName("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnName("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("FullName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Gender")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsActice")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<string>("UserImage")
                        .HasColumnName("UserImage")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasColumnName("CouponCode")
                        .HasColumnType("varchar(15)");

                    b.Property<double>("DiscountValue")
                        .HasColumnName("DiscountValue")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnName("DisplayName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpriredTime")
                        .HasColumnName("ExpriredTime")
                        .HasColumnType("datetime");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRedeem")
                        .HasColumnName("IsRedeem")
                        .HasColumnType("bit");

                    b.Property<double>("MaximumDiscount")
                        .HasColumnName("MaximumDiscount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartedTime")
                        .HasColumnName("StartedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnName("BillingAddress")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CustomerId")
                        .HasColumnName("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("GrandTotal")
                        .HasColumnName("GrandTotal")
                        .HasColumnType("float");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerify")
                        .HasColumnName("IsVerify")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnName("OrderCode")
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("PackageHeight")
                        .HasColumnName("PackageHeight")
                        .HasColumnType("float");

                    b.Property<double?>("PackageLength")
                        .HasColumnName("PackageLength")
                        .HasColumnType("float");

                    b.Property<double?>("PackageWidth")
                        .HasColumnName("PackageWidth")
                        .HasColumnType("float");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnName("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnName("ShippingAddress")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ShippingId")
                        .HasColumnName("ShippingId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("Status")
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("SubTotal")
                        .HasColumnName("SubTotal")
                        .HasColumnType("float");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ShippingId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shop.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId");

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnName("Detail")
                        .HasColumnType("text");

                    b.Property<int?>("DiscountId")
                        .HasColumnName("DiscountId")
                        .HasColumnType("int");

                    b.Property<double?>("Height")
                        .HasColumnName("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnName("Image1")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image2")
                        .HasColumnName("Image2")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image3")
                        .HasColumnName("Image3")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Image4")
                        .HasColumnName("Image4")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<double?>("Length")
                        .HasColumnName("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductStatusId");

                    b.Property<double?>("PromotionPrice")
                        .HasColumnName("PromotionPrice")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("RegularPrice")
                        .HasColumnName("RegularPrice")
                        .HasColumnType("float");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnName("Sku")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnName("Weight")
                        .HasColumnType("float");

                    b.Property<double?>("Width")
                        .HasColumnName("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductStatusId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop.Domain.Entities.ProductStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductStatusTypes");

                    b.HasData(
                        new { Id = 1, InsertedAt = 1541673472, Name = "Out of stock", UpdatedAt = 1541673472 },
                        new { Id = 2, InsertedAt = 1541673472, Name = "Stock", UpdatedAt = 1541673472 }
                    );
                });

            modelBuilder.Entity("Shop.Domain.Entities.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnName("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingCode")
                        .IsRequired()
                        .HasColumnName("ShippingCode")
                        .HasColumnType("varchar(20)");

                    b.Property<double>("ShippingPrice")
                        .HasColumnName("ShippingPrice")
                        .HasColumnType("float");

                    b.Property<string>("ShippingStatus")
                        .IsRequired()
                        .HasColumnName("ShippingStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Shippings");
                });

            modelBuilder.Entity("Shop.Domain.Entities.ShippingProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsertedAt")
                        .HasColumnName("InsertedAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShippingProviders");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Category", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Admin", "Admin")
                        .WithMany("Categories")
                        .HasForeignKey("AdminId");

                    b.HasOne("Shop.Domain.Entities.Discount", "Discount")
                        .WithMany("Categories")
                        .HasForeignKey("DiscountId");

                    b.HasOne("Shop.Domain.Entities.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Discount", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Admin", "Admin")
                        .WithMany("Discounts")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Order", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Shop.Domain.Entities.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Shop.Domain.Entities.Shipping", "Shipping")
                        .WithOne("Order")
                        .HasForeignKey("Shop.Domain.Entities.Order", "ShippingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Shop.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Entities.Product", b =>
                {
                    b.HasOne("Shop.Domain.Entities.Admin", "Admin")
                        .WithMany("Products")
                        .HasForeignKey("AdminId");

                    b.HasOne("Shop.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Shop.Domain.Entities.Discount", "Discount")
                        .WithMany("Products")
                        .HasForeignKey("DiscountId");

                    b.HasOne("Shop.Domain.Entities.ProductStatusType", "ProductStatusType")
                        .WithMany("Products")
                        .HasForeignKey("ProductStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Entities.Shipping", b =>
                {
                    b.HasOne("Shop.Domain.Entities.ShippingProvider", "Provider")
                        .WithMany("Shippings")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
